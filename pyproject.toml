[project]
name = "khipu-tools"
version = "2025.2.0"
description = "Set de herramientas para operar con la APIv3 de Khipu"
readme = "README.md"
requires-python = ">=3.9, <4.0"
license = { text = "MIT" }
authors = [{ name = "Mario Hernandez", email = "mariofix@proton.me" }]
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Operating System :: OS Independent",
]
keywords = [
    "khipu",
    "pagos",
    "transferencias",
    "payment",
    "subscription",
    "subscripcion",
]

dependencies = [
    "python-dateutil",
    "python-slugify>=8.0.4",
    "requests>=2.32.3",
    "typing-extensions>=4.12.2",
]

[project.urls]
Repository = "http://github.com/mariofix/khipu-tools"
Homepage = "http://mariofix.github.io/khipu-tools"
Documentation = "http://mariofix.github.io/khipu-tools"


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
packages = [{ include = "khipu_tools" }]

[project.optional-dependencies]

dev = [
    "pylint",
    "mock",
    "pre-commit>=4.0.1",
    "flask>=3.1.0",
    "black>=24.10.0",
    "mkdocs-material>=9.5.49",
    "mkdocstrings[python]>=0.27.0",
    "pytest>=8.3.4",
    "coverage>=7.6.9",
    "pytest>=8.3.4",
    "pytest-cov (>=6.0.0,<7.0.0)",
    "pytest-mock (>=3.14.0,<4.0.0)",
]


[tool.black]
line-length = 119
target-version = ["py39"]

[tool.isort]
profile = "black"
line_length = 119
multi_line_output = 5
py_version = 39

[tool.autopep8]
max_line_length = 119
ignore = "E501,W6"    # or ["E501", "W6"]
in-place = true
recursive = true
aggressive = 3

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]
show_missing = true
fail_under = 0

[tool.coverage.run]
source = ["khipu_tools"]
omit = ["*/tests/*"]
branch = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vra"
testpaths = ["tests"]
python_files = ["test*.py"]
